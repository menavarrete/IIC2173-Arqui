version: "3"
services:

  swarm-listener:
    image: vfarcic/docker-flow-swarm-listener
    environment:
      - DF_NOTIFY_CREATE_SERVICE_URL=http://proxy:8080/v1/docker-flow-proxy/reconfigure
      - DF_NOTIFY_REMOVE_SERVICE_URL=http://proxy:8080/v1/docker-flow-proxy/remove
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 10s
    depends_on:
      - proxy
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - proxy

  proxy:
    image: vfarcic/docker-flow-proxy
    environment:
      - LISTENER_ADDRESS=swarm-listener
      - STATS_USER=u
      - STATS_PASS=p
      - MODE=swarm
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 2
        delay: 10s
        failure_action: pause
        monitor: 10s
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    networks:
      - proxy

  mongo:
    image: mongo
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rs", "--journal", "--smallfiles"]
    deploy:
      mode: global
      labels:
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.port=27017
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 1m
        failure_action: pause
        monitor: 2s
    ports:
      - "27017:27017"
    volumes:
      - "/home/administrator/data/mongodb/db:/data/db"
    networks:
      - proxy

  mongo-ctrl:
    image: martel/mongo-replica-ctrl:latest
    entrypoint: python /src/replica_ctrl.py
    environment:
      - OVERLAY_NETWORK_NAME=proxy
      - MONGO_SERVICE_NAME=arqui_mongo
      - REPLICASET_NAME=rs
      - MONGO_PORT=27017
      # - DEBUG=1 #uncomment to debug the script
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: pause
        monitor: 2s
    depends_on:
      - mongo
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - proxy

  redis:
    image: redis:4-alpine
    deploy:
      replicas: 1
      labels:
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.port=6379
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 1m
        failure_action: pause
        monitor: 2s
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/home/administrator/data/redis/db:/data"
    networks:
      - proxy

  api:
    image: negebauer/iic2173-arqui-api:latest
    environment:
      - MONGO=mongodb://mongo/IIC2173-Arqui?replicaSet=rs
      - API_MAILER_SECRET=secretapimailer
      - API_QUEUE_SECRET=secretapiqueue
      - API_URI=http://arqss2.ing.puc.cl/api
      - MAILER_URI=http://email
      - QUEUE_URI=http://queue
      - ARQUITRAN_URI=http://arqss17.ing.puc.cl:3000
    deploy:
      replicas: 14
      labels:
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.servicePath=/api
        - com.df.port=80
        - com.df.reqPathSearch=/api
        - com.df.reqPathReplace=
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 3
        delay: 10s
        failure_action: pause
        monitor: 2s
    depends_on:
      - mongo
      - queue
      - email
    networks:
      - proxy

  email:
    image: negebauer/iic2173-arqui-email:latest
    environment:
      - API_MAILER_SECRET=secretapimailer
      - API_URI=http://api
      - MAIL_NAME=Grupo1
      - MAIL_USER=iic2173grupo1@gmail.com
      - MAIL_PASSWORD=arquitectura
    deploy:
      replicas: 3
      labels:
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.servicePath=/email
        - com.df.port=80
        - com.df.reqPathSearch=/email
        - com.df.reqPathReplace=
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: pause
        monitor: 2s
    depends_on:
      - api
    networks:
      - proxy

  queue:
    image: negebauer/iic2173-arqui-queue:latest
    environment:
      - API_URI=http://api
      - API_QUEUE_SECRET=secretapiqueue
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASS=
      - ARQUITRAN_URI=http://arqss16.ing.puc.cl
      - ARQUITRAN_TOKEN=d51f6a66-e670-41c4-8187-2149bc46654e
      - ARQUITRAN_ID=G1
    deploy:
      replicas: 1
      labels:
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.servicePath=/queue
        - com.df.port=80
        - com.df.reqPathSearch=/queue
        - com.df.reqPathReplace=
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 2s
    depends_on:
      - redis
    networks:
      - proxy

  queue-visualizer:
    image: negebauer/iic2173-arqui-queue-visualizer:latest
    environment:
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASS=
    deploy:
      replicas: 1
      labels:
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.servicePath=/qv
        - com.df.port=80
        - com.df.reqPathSearch=/qv
        - com.df.reqPathReplace=
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 2s
    depends_on:
      - redis
    networks:
      - proxy

  web:
    image: negebauer/iic2173-arqui-web:latest
    environment:
      - API=http://arqss2.ing.puc.cl/api
    deploy:
      replicas: 5
      labels:
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.servicePath=/
        - com.df.port=80
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 2
        delay: 10s
        failure_action: pause
        monitor: 2s
    networks:
      - proxy

  visualizer:
    image: dockersamples/visualizer:stable
    deploy:
      replicas: 1
      labels:
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.servicePath=/v
        - com.df.port=8080
        - com.df.reqPathSearch=/v
        - com.df.reqPathReplace=
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 2s
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - proxy

networks:
  proxy:
    external: true
    # driver: overlay
