version: 2
jobs:
  gitflow:
    docker:
      - image: circleci/node:8.5
    steps:
      - run:
          name: Check valid branch name
          command: |
            invalid=1
            if [[ $CIRCLE_BRANCH == 'master' ]]; then invalid=0; fi
            if [[ $CIRCLE_BRANCH == 'dev' ]]; then invalid=0; fi
            if [[ $CIRCLE_BRANCH == 'f/'* ]]; then invalid=0; fi
            if [[ $invalid == 1 ]]; then exit 1; fi

  api:
    docker:
      - image: circleci/node:8.5
      - image: circleci/mongo:3.5.6
    working_directory: ~/arqui/api
    steps:
      - checkout:
          path: ~/arqui
      - restore_cache:
          keys:
          - api-v1-{{ checksum "package.json" }}
          - api-v1-
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: api-v1-{{ checksum "package.json" }}
      - run: yarn lint
      - run: yarn test:ci
      - store_test_results:
          path: ./coverage
      - store_artifacts:
          path: ./coverage/junit.xml
          destination: junit/junit.xml
      - store_artifacts:
          path: ./coverage/lcov-report
          destination: coverage

  email:
    docker:
      - image: circleci/node:8.5
    working_directory: ~/arqui/email
    steps:
      - checkout:
          path: ~/arqui
      - run: pwd; ls

  queue:
    docker:
      - image: circleci/node:8.5
      - image: redis:4-alpine
    working_directory: ~/arqui/queue
    steps:
      - checkout:
          path: ~/arqui
      - restore_cache:
          keys:
          - queue-v1-{{ checksum "package.json" }}
          - queue-v1-
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: queue-v1-{{ checksum "package.json" }}
      - run: yarn lint
      - run: yarn test:ci
      - store_test_results:
          path: ./coverage
      - store_artifacts:
          path: ./coverage/junit.xml
          destination: junit/junit.xml
      - store_artifacts:
          path: ./coverage/lcov-report
          destination: coverage

  queue-visualizer:
    docker:
      - image: circleci/node:8.5
    working_directory: ~/arqui/queue-visualizer
    steps:
      - checkout:
          path: ~/arqui
      - restore_cache:
          keys:
          - queue-visualizer-v1-{{ checksum "package.json" }}
          - queue-visualizer-v1-
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: queue-visualizer-v1-{{ checksum "package.json" }}
      - run: yarn lint

  web:
    docker:
      - image: circleci/node:8.5
    working_directory: ~/arqui/web
    steps:
      - checkout:
          path: ~/arqui
      - restore_cache:
          keys:
          - web-v1-{{ checksum "package.json" }}
          - web-v1-
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: web-v1-{{ checksum "package.json" }}
      # - run: yarn lint

  docker-api:
    docker:
      - image: docker
        environment:
          REPO: negebauer/iic2173-arqui-api
          TAG_CI: circleci
    working_directory: ~/arqui/api
    steps:
      - checkout:
          path: ~/arqui
      - setup_remote_docker:
          version: 17.05.0-ce
      - run: docker build -t $REPO:$TAG_CI-$CIRCLE_BUILD_NUM .
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push $REPO:$TAG_CI-$CIRCLE_BUILD_NUM
      - run:
          name: Deploy latest or dev if master or dev
          command: |
            TAG=dev
            if [[ $CIRCLE_BRANCH == 'master' ]]; then TAG=latest; fi
            docker tag $REPO:$TAG_CI-$CIRCLE_BUILD_NUM $REPO:$TAG
            docker push $REPO:$TAG

  docker-queue:
    docker:
      - image: docker
        environment:
          REPO: negebauer/iic2173-arqui-queue
          TAG_CI: circleci
    working_directory: ~/arqui/queue
    steps:
      - checkout:
          path: ~/arqui
      - setup_remote_docker:
          version: 17.05.0-ce
      - run: docker build -t $REPO:$TAG_CI-$CIRCLE_BUILD_NUM .
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push $REPO:$TAG_CI-$CIRCLE_BUILD_NUM
      - run:
          name: Deploy latest or dev if master or dev
          command: |
            TAG=dev
            if [[ $CIRCLE_BRANCH == 'master' ]]; then TAG=latest; fi
            docker tag $REPO:$TAG_CI-$CIRCLE_BUILD_NUM $REPO:$TAG
            docker push $REPO:$TAG

  docker-queue-visualizer:
    docker:
      - image: docker
        environment:
          REPO: negebauer/iic2173-arqui-queue-visualizer
          TAG_CI: circleci
    working_directory: ~/arqui/queue-visualizer
    steps:
      - checkout:
          path: ~/arqui
      - setup_remote_docker:
          version: 17.05.0-ce
      - run: docker build -t $REPO:$TAG_CI-$CIRCLE_BUILD_NUM .
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push $REPO:$TAG_CI-$CIRCLE_BUILD_NUM
      - run:
          name: Deploy latest or dev if master or dev
          command: |
            TAG=dev
            if [[ $CIRCLE_BRANCH == 'master' ]]; then TAG=latest; fi
            docker tag $REPO:$TAG_CI-$CIRCLE_BUILD_NUM $REPO:$TAG
            docker push $REPO:$TAG

  docker-web:
    docker:
      - image: docker
        environment:
          REPO: negebauer/iic2173-arqui-web
          TAG_CI: circleci
    working_directory: ~/arqui/web
    steps:
      - checkout:
          path: ~/arqui
      - setup_remote_docker:
          version: 17.05.0-ce
      - run: docker build -t $REPO:$TAG_CI-$CIRCLE_BUILD_NUM .
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push $REPO:$TAG_CI-$CIRCLE_BUILD_NUM
      - run:
          name: Deploy latest or dev if master or dev
          command: |
            TAG=dev
            if [[ $CIRCLE_BRANCH == 'master' ]]; then TAG=latest; fi
            docker tag $REPO:$TAG_CI-$CIRCLE_BUILD_NUM $REPO:$TAG
            docker push $REPO:$TAG

  docker:
    docker:
      - image: circleci/node:8.5
    steps:
      - checkout
      - run: pwd ; ls
      - run: ls docker

  deploy:
    docker:
      - image: circleci/node:8.5
    steps:
      - run: echo "NOT IMPLEMENTED"

workflows:
  version: 2
  workflow:
      jobs:
        - gitflow
        - api
        - email
        - queue
        - queue-visualizer
        - web
        - docker-api:
            requires:
              - api
            filters:
              branches:
                only:
                  - master
                  - dev
        - docker-queue:
            requires:
                - queue
            filters:
              branches:
                only:
                  - master
                  - dev
        - docker-queue-visualizer:
            requires:
                - queue-visualizer
            filters:
              branches:
                only:
                  - master
                  - dev
        - docker-web:
            requires:
              - web
            filters:
              branches:
                only:
                  - master
                  - dev
        - docker:
            requires:
              - docker-api
              - email
              - queue
              - docker-web
            filters:
              branches:
                only:
                  - master
                  - dev
        - deploy:
            requires:
              - docker
            filters:
              branches:
                only:
                  - master
